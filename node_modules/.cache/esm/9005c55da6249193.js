let json,urlencoded;_a62‍.w("body-parser",[["json",["json"],function(v){json=v}],["urlencoded",["urlencoded"],function(v){urlencoded=v}]]);
const express = require('express')
const distanceBetweenPoints = require('distance-between-geocoordinates')

const app = express()
const port = 3000

const axios = require('axios')
const BASE_URL = 'https://bpdts-test-app.herokuapp.com/'

const London = {
    lat: 51.5074,
    lng: 0.1278
  }

const getDistanceBetweenTwoPoints = (London, loc) => {
var responseData = distanceBetweenPoints(London, loc, 'mile')
let distance = responseData.distance
if (distance <= 50) {
    return true
} else {
    return false
}
}

const getAllUsers = () =>
  axios({
    method: 'GET',
    url: BASE_URL + `/users`
  })

const getLondonUsers = async () => 
await axios({
    method: 'GET',
    url: BASE_URL + `/city/London/users`
  })


const asyncGetUsersWithLondonCoords = async () => {
const response = await getAllUsers()
return response.data.filter(user =>
    getDistanceBetweenTwoPoints(London, {
    lat: user.latitude,
    lng: user.longitude
    })
)
}

const londonUsers = async () => await getLondonUsers();
londonUsers = londonUsers.then(data => JSON.stringify(data))
let usersWithLondonCoords = asyncGetUsersWithLondonCoords();

const combineResults = (usersWithLondonCoords, londonUsers) => {
    _a62‍.g.console.log(usersWithLondonCoords)
    _a62‍.g.console.log(londonUsers)
    let allMatches = usersWithLondonCoords.concat(londonUsers)
    return allMatches
}

app.use(json())
app.use(urlencoded({ extended: true }))

app.get('/', async (req, res) => {
    res.send({ message: 'Users within 50 miles of London', usersInLondon: londonUsers 
    }) })

app.listen(port, () => {
  console.log(`API running at http://localhost:${port}`)
})